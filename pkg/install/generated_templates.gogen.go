// Code generated by vfsgen; DO NOT EDIT.

package install

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// templates statically implements the virtual filesystem provided to vfsgen.
var templates = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
		},
		"/flux-helm-operator-account.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-helm-operator-account.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 948,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x39\x6f\xdc\x30\x10\x85\x7b\xfe\x8a\x01\x5c\x38\x09\x2c\x05\xee\x02\x75\xb6\x8b\x14\x09\x52\x28\x47\x13\xa4\x18\x92\x4f\x59\xc6\x5c\x8e\x30\x24\x37\x87\xb0\xff\x3d\x90\xb4\x06\xbc\x8e\xed\x34\xdb\x8d\xe6\xd2\x9b\xc7\xaf\x69\x1a\x73\x46\x9f\x36\xa0\x0c\xdd\x05\x07\x62\xe7\xa4\xa6\x72\x41\x2e\xd6\x5c\xa0\xa4\x12\x91\x2f\x88\x93\x3f\x4a\x91\x0d\xc9\x87\xf4\x9d\x58\x61\xce\x48\x52\xfc\x4d\x09\xf0\xf0\x34\x88\xd2\xbb\x6a\xa1\x09\x05\x99\x7e\x86\xb2\x59\x46\x1a\xcb\x19\x7e\xfe\x03\x72\x26\x27\xa9\xa8\x44\x7a\xd1\x5f\x5f\xdd\xbc\x6c\x0d\x8f\xe1\x0b\x34\x07\x49\x1d\xed\x2e\xcd\x6d\x48\xbe\xa3\x8f\xab\xaa\xab\x55\x94\xd9\xa2\xb0\xe7\xc2\x9d\x21\x8a\x6c\x11\xf3\x1c\x11\x25\xde\xa2\xa3\x21\xd6\x5f\xcd\x06\x71\xdb\xc8\x08\xe5\x22\x6a\x9e\x2e\x4d\x13\x85\x81\xda\x0f\xbc\x45\x1e\xd9\x81\xf6\xfb\x43\xf7\xf2\xd9\xd1\x34\x1d\x57\xa7\x89\x90\xfc\x7e\x6f\x66\xcf\xee\x8b\x55\xcb\xae\xe5\x5a\x36\xa2\xe1\x0f\x97\x20\xa9\xbd\x7d\x93\xdb\x20\xaf\x77\x97\x16\x85\xef\x6e\xb9\x59\xdd\xeb\x25\xe2\x94\x87\x18\xad\x11\xcb\x78\x43\x3c\x86\xb7\x2a\x75\xcc\x1d\x7d\x3d\x7f\x75\xfe\x6d\xd9\xa9\xc8\x52\xd5\xe1\x28\xb9\x83\xda\x7b\x89\x86\x92\xa4\xfe\xd0\xf8\xb9\x7f\xff\x74\xef\x09\xae\xbf\x5e\xc9\x39\xad\x09\x12\xd1\x63\x98\x17\xdc\x99\xf0\x8c\x36\x43\xf4\xef\x9b\x3c\xb3\x3d\x57\xfb\x03\xae\x1c\x5c\x7e\x14\xcd\xff\x08\x7f\x88\xd6\x43\xf6\x1e\xa3\x2d\xe6\x39\xf2\x18\xb8\xc6\xb2\xe2\x37\x53\xfa\x37\x00\x00\xff\xff\xad\xec\xff\x2b\xb4\x03\x00\x00"),
		},
		"/flux-helm-release-crd.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-helm-release-crd.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 8865,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x6d\x6f\xdb\xc8\x11\xfe\xee\x5f\x31\x4d\x0b\xd8\x29\x64\xc5\x89\xdb\xa2\x15\x70\xb8\x0b\x62\x5c\x93\x26\x77\x31\xec\x38\xfd\x60\xa4\xc0\x88\x1c\x92\x5b\x2d\x77\x79\xfb\x22\x5b\x2d\xfa\xdf\x8b\xd9\x25\x25\x91\xa2\x28\xda\x71\x0b\x14\x29\x3f\x49\xdc\xdd\xd9\x67\xde\x9e\x99\x5d\x9e\x9e\x9e\x1e\x61\x25\x3e\x93\xb1\x42\xab\x19\x60\x25\xe8\xde\x91\xe2\x7f\x76\xba\xf8\xa3\x9d\x0a\xfd\x62\xf9\x72\x4e\x0e\x5f\x1e\x2d\x84\x4a\x67\xf0\xc6\x5b\xa7\xcb\x2b\xb2\xda\x9b\x84\x2e\x28\x13\x4a\x38\xa1\xd5\x51\x49\x0e\x53\x74\x38\x3b\x02\x50\x58\xd2\x0c\x0a\x92\xa5\x21\x49\x68\xc9\x4e\xf9\xcf\x34\x93\xfe\x3e\x49\xa7\x42\x1f\xd9\x8a\x12\x9e\x99\x1b\xed\xab\x38\x75\x6b\x34\x4a\xb0\x3c\x01\x20\xee\xfb\x96\x64\x79\x15\x85\x85\xb7\x52\x58\xf7\xbe\x3b\xf2\x41\x58\x17\x46\x2b\xe9\x0d\xca\x36\x84\x30\x60\x0b\x6d\xdc\xcf\x1b\xe1\xa7\x50\x98\x23\x00\x9b\xe8\x8a\x66\x10\x06\x2a\x4c\x28\x3d\x02\xc0\x34\x0d\x9a\xa1\xbc\x34\x42\x39\x32\x6f\xb4\xf4\xa5\x5a\x2f\xfc\xcb\xf5\xc7\x9f\x2f\xd1\x15\x33\x98\x5a\x87\xce\xdb\x69\xbd\x13\x4b\x09\x73\x1a\x43\x6c\xe3\x06\x70\x2b\xde\xca\x3a\x23\x54\x7e\x48\xd4\x75\xf8\xd7\x12\xd6\x7a\x35\x4a\x56\xa2\x55\xd4\xc4\xde\x7e\x7f\xf2\xc3\x94\xd7\x7c\xf7\xdd\xb3\x1a\x54\xfa\xec\xf9\x97\x69\x49\xd6\x62\xde\x06\xfd\x53\xeb\xdd\xf0\x46\x8d\xef\xa7\x89\x21\xe4\x9d\x3e\x89\x92\xac\xc3\xb2\x6a\x89\x7c\xdd\x11\x97\xa2\xe3\x17\xd6\xcf\x4d\x1d\x4f\xb5\x71\x23\xf0\x19\xfc\xf3\x5f\x47\x00\xcb\x26\x3a\x97\x2f\x37\xff\xd6\x5e\x88\x92\xc3\x50\x58\x49\x66\x49\xe9\x0c\x9c\xf1\xcd\x5e\xd6\x69\x83\x39\xad\xdf\x2d\x51\x8a\x34\xa0\x8c\x32\x74\x45\xea\xf5\xe5\xbb\xcf\xe7\xd7\x49\x41\x25\xce\xea\x65\x95\xd1\x15\x19\x27\x1a\x4c\x41\x54\x1d\xb5\xcd\x63\xe8\x17\x2f\x0c\xef\x77\x7b\x9c\x14\x68\xdc\xf1\x97\xad\xd1\x3e\x09\xfc\x70\x50\x36\x29\xd7\x1a\x00\x48\xc9\x26\x46\x54\x01\x1c\x7c\x2a\x28\x04\x77\xa3\x33\xb8\x42\x58\xa8\x23\x03\x1c\x9a\x9c\x9c\x9d\xc2\xbb\x0c\x94\x76\x60\x7d\x55\x49\x41\xe9\x04\x84\x83\x3b\x21\x25\xa4\x94\xa1\x97\x0e\x9c\xee\xec\x02\xb0\x7c\x35\xed\xbc\xdb\x71\xf0\x96\x1e\xe8\x1c\x19\x35\x83\x67\x7f\x5b\xde\xbe\x9a\x9c\x7f\xf9\xcd\xb3\xd6\x8c\xad\xb0\x1f\xa7\x4f\xa3\x02\xfb\x6e\x00\xff\x9c\x20\x27\x45\x06\x1d\xa5\x30\x5f\x01\x66\x99\xb8\x17\x2a\x07\x57\xd0\x8e\x46\xaa\x49\x5d\x70\x9a\x27\x40\x13\x52\x71\x97\x47\x69\x7b\x8b\xa7\xff\x38\x3b\xfd\xd3\x97\x93\xdb\xd3\xfa\xd7\x6f\x9b\x57\xcf\xbf\xef\x18\xa1\xc4\xfb\xb7\x82\x43\x6d\x75\xd0\x06\x25\xde\x8b\xd2\x97\xa0\x7c\x39\x27\x03\x3a\x5b\x1b\xc4\xd0\x52\x84\xe8\x66\x25\x16\x44\xd5\xa4\x71\x62\x78\xf3\xf2\xac\x57\x0d\x26\xa7\x9c\x4c\x67\x2c\xd3\xa6\x44\x17\x46\xcf\x5f\xb5\xc6\x62\xe4\xac\xb9\xee\xe1\x3e\x0b\xcb\x7a\x1c\xc7\x66\xdf\xf8\xa1\xf1\x21\xbf\xb5\x1b\x4a\xdc\x3c\x68\x77\x1d\x15\x45\xff\xc7\xbd\xe5\x44\x49\xda\xbb\x41\xd5\x83\xda\x42\x59\x87\x52\x82\x36\xe0\xab\xdc\x60\x4a\xcd\x5a\x10\x0a\x2c\x31\xb7\xda\xc7\x79\xe5\x0f\xbf\xeb\x64\x91\x25\xf7\x19\xa5\xef\xd2\x45\x07\xd6\xbb\x6c\x6d\xf1\x68\xe2\xb0\x90\x59\xcd\x93\x05\xad\x02\xbd\x34\x60\x7b\x91\xcd\xb5\x96\x84\xaa\x35\x66\x17\xa2\x7a\x73\x75\x71\x78\x6b\x72\x93\xb8\x2d\xaf\x80\x37\x57\x17\x8d\x89\x02\xa3\xb2\x7e\x35\x67\x9d\x8f\xde\xfb\x0e\xc5\xb0\x27\xfe\x8a\xc2\x05\xc9\xa8\x36\x5e\xd0\x90\xe8\xb2\x92\xe4\x08\xe6\x94\x69\xc3\x79\x65\x16\x4c\x0f\x4d\xa8\xa2\x05\xeb\x93\x84\xac\xcd\xbc\x1c\x8d\x26\xd3\x26\xa1\x9b\xb8\xcb\xc3\x1c\x11\x56\x46\xed\xd7\x28\x0b\xa3\x7d\x5e\x40\x4a\x0c\xf4\x85\xa1\x50\x20\xc7\xbb\xc5\x68\x29\xe7\x98\x2c\xba\x40\xe2\x0a\x3d\xff\x3b\x25\xae\x9b\x11\x7b\xaa\x0e\x3f\xa4\x70\x2e\x77\xb4\xea\xd5\x6c\xed\xe7\x8a\x0c\x07\xed\x1a\x8a\x0d\x9e\x68\x95\x22\xbd\x71\x4b\x86\x42\x7a\x43\xdd\x94\x18\xd6\x32\x68\x4a\x6e\x97\x3a\xf7\x22\x63\xde\x68\xb6\xd4\x19\x60\x40\xc7\x55\x02\x93\xc5\x1a\x56\x43\x40\x2c\x9a\x9d\xe4\x95\x13\xdd\x38\xa8\xa1\x6d\xb1\x32\x96\xda\x2b\x17\x59\x99\xd7\x59\x08\x9a\x62\x52\x84\xae\xf0\x61\x5a\x95\x78\x7f\x15\xa5\x1c\x54\xed\xd3\x20\x06\x57\xa0\xe3\xe6\xd5\xcb\x94\x55\x62\xd6\x2b\x2b\xae\x8b\x21\x2d\x6a\xf5\x7b\x75\x6b\x99\x44\x6c\x24\xa2\xa1\x3a\x1e\xd2\x76\x95\xf9\xfd\x04\xce\x80\x7e\xf1\x28\x2d\x08\x15\xfa\xfb\x5d\xee\x1e\x66\x39\x18\x64\x3a\x68\xb2\xec\x61\x81\x18\xd3\x6b\x5d\x2d\x7c\xc5\xed\xe3\xbe\x0c\x63\x4d\x15\x51\xfa\x08\x9f\x35\x22\xfa\xd0\x0d\xaf\x4c\x85\x65\x7b\xbe\xd5\x7a\x71\xd8\xdf\xed\x24\x33\xb4\x24\xe5\xa0\xe0\xa5\x90\x19\x5d\x82\xf1\x4a\x31\x9b\xa5\xde\x04\x52\xab\xd3\xef\xc1\xa0\xf6\x94\xba\x1d\x3c\xdc\xb2\x6f\xd5\x34\x8e\x84\xbb\x0d\xef\xae\x40\xa8\x54\x2c\x45\xea\x51\xc2\x7b\x3f\x27\xa3\xc8\x71\xbd\xa9\xb8\x3f\x13\x5a\x4d\x7a\x83\x6f\x3b\xae\xce\xcf\xce\xf6\x14\x4c\xf8\xea\x70\xea\x2b\x21\xc3\x16\x0f\xba\x05\x46\x88\xd9\x2f\x54\xa7\x27\xbb\xd4\xa9\x8d\xdc\x72\x41\x95\xd4\xab\x92\x54\x97\x6a\xe3\xc3\x89\x24\x14\x27\x21\x61\xba\x0a\x67\x97\x9d\x92\x14\xfb\x9c\xc3\x65\x09\x06\xdd\x19\x6a\xfc\x8f\x42\xd2\x35\x87\xa8\x1b\x2e\xd6\x17\x54\x19\x4a\xb8\x77\xfe\x15\xdc\x58\xaa\x1b\x84\x1f\x8d\x2e\xa7\x36\x2c\x7f\x4f\xab\x2b\xca\x42\xf9\x26\xec\xa6\x49\x04\x81\xc6\xe0\xaa\x33\x22\x1c\x95\x3d\xd1\x3d\x50\x91\xda\xe7\x24\xee\xf2\x5a\xc7\xa4\xf8\x0c\x95\xad\xfa\xfc\xb8\x27\xc2\xb6\x74\xe6\x9e\x96\x7d\x16\x5a\xce\xa0\xe4\x04\x4a\x6f\x1d\x53\xa6\x50\xeb\x4e\x74\xab\x49\xad\x7b\xd0\xee\xed\x42\xbf\x76\x3d\x1d\xe8\xc6\xaa\xfd\x25\xfa\xa9\x2c\x38\x6c\x9e\x44\xab\x4c\xe4\x3f\x61\x15\x7d\xda\x6f\xa9\x41\xf9\x30\xce\x4b\x87\xa1\xc0\xa0\xb7\x60\xc8\x63\x51\x8b\x12\xab\x27\x72\x1a\x0c\x1f\x1d\x9a\x67\x41\xbd\x7d\x47\x0f\xd8\xf7\xb4\x6a\x10\xad\xb1\x32\xb3\xe5\xe4\xc2\xcb\xba\x07\x67\xfa\x6e\x97\xd4\x38\x30\x5d\x61\xd9\xdf\x7f\x8c\x44\xaa\xab\x78\x1f\x35\x12\x6e\xc3\x77\x1b\xb6\xa9\x8b\xff\x12\x65\x63\xf3\x06\xb2\x90\xc4\x7d\x8e\xd2\x20\xb5\xca\xc9\x40\x89\x2a\x45\x3e\xce\x1e\x00\xbc\xaf\xec\xc4\x47\xed\x3b\x64\xee\x81\xfc\xa9\x75\x82\x14\x0a\xee\x0a\x91\x14\x1d\x8b\xd3\xbd\xb0\xae\xaf\x86\x8c\x32\xe4\x36\xf9\xfd\x8f\x26\xca\x93\x52\xdb\x08\x93\xc1\x63\xb3\x24\x02\xfd\x7f\x8a\xfc\x97\x52\xa4\x36\xf7\xd7\xe5\x07\xdd\x3b\x32\x0a\xe5\x75\x68\xb3\x9f\x26\x49\xbc\x91\x8f\xce\x11\x6f\xc6\x3a\xf3\xe6\xea\x43\xdb\x67\xdf\x58\x34\x85\x1b\x68\x6e\x0f\x9f\xc6\x69\x15\xba\xe2\xd1\x5e\xe3\xc5\x23\xad\xc6\x53\xe1\x4e\xb8\xa2\x26\x8d\x70\x7f\x15\x74\x81\x93\x70\x12\xca\x85\x03\x43\x95\x7e\x0e\x77\x05\x99\x96\x73\xd9\x84\x52\x87\x2e\xf7\x5b\xf1\xb3\x56\xf4\xb1\xc7\xbd\xa7\xed\x8f\x11\xed\x86\xb0\xc7\x8d\xed\xf9\xdb\x45\xf1\xe0\xe4\x1d\x86\x38\xb8\x62\x3b\x32\x3b\x93\x97\x87\x6f\x3c\x13\xad\x1c\xc5\xeb\x90\xfd\x79\xbd\x37\xb4\xc3\xde\x5d\xf9\xbd\x46\x6c\x63\xce\x85\x3b\x9e\xc0\xbe\x2c\x18\xce\x80\xbc\xff\x34\xda\xd1\xeb\xcf\xc2\x05\xce\xa2\x69\x3e\xe5\x25\x3f\xe4\xc2\x15\x7e\x3e\x4d\x74\x39\xd3\x26\x7f\xc1\x31\xff\xb0\xd3\x48\xf3\x34\x87\x65\xce\x9c\x5f\x87\x4b\xfa\x94\x32\xa1\xe2\x67\x94\x8f\xaf\xaf\x7b\x16\xed\x4f\xd8\x16\xe6\x4b\x4e\x56\xa1\xac\x48\xe3\xc5\x7e\x93\x9b\x56\x70\x48\xd7\x09\xda\xb4\x1d\x75\x16\x8b\xfe\x5a\x74\x40\x0b\xb3\x8f\xc4\x76\x6c\x38\x37\xa8\x92\xa2\xdd\x4e\x94\x68\x5d\xef\x3d\xc2\xe1\xfe\x70\x21\xaa\x0b\xaa\x6e\xc2\xf5\xd2\x08\x04\x0d\x19\xa4\x9a\x6c\x30\xb5\xf1\x0a\x8e\x53\xaa\x8e\x9b\x2b\xaa\x13\xb4\xd6\x97\xd4\x44\x57\x49\xca\x6d\xd8\x0b\x65\xbc\x36\xc8\xbc\xcc\x84\x94\x94\x3e\x1f\x00\xdd\xcf\x09\xed\xb8\xdd\x78\x83\xc3\x37\xb4\xa7\x13\x38\xae\x3f\x21\x3e\x38\x92\x37\xd2\x46\x98\xa2\xfe\x50\xb4\x8e\x86\x9b\xab\x0f\x5f\x17\xbf\xde\xc8\xb1\xf1\x3b\xf2\x86\x60\x2b\x2c\x55\xdf\x37\xa9\x11\xf0\x96\xfd\x9f\x6e\x87\x37\xab\x17\x7d\x9d\x39\x2c\x95\x4b\x32\x63\x2d\x12\x36\xbe\xf4\x52\xc6\xdb\xa2\x7e\xbc\x4f\x7a\x46\xe9\xfa\x7f\x8e\x56\x24\x80\xde\x15\x70\xc2\x90\x45\x59\xc9\x10\xfe\xfb\xa2\x7c\xc7\x1a\xff\x0e\x00\x00\xff\xff\x00\xf6\xce\xdf\xa1\x22\x00\x00"),
		},
		"/helm-operator-deployment.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "helm-operator-deployment.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 6207,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\xcd\x8f\xdb\xb8\x15\xbf\xcf\x5f\xf1\x30\x73\xc8\x65\x24\x39\xd8\xec\x02\x55\x90\x43\xba\xe9\x66\x02\x24\xe9\xa0\x13\x14\xe8\x69\x97\xa6\x9e\x2d\xd6\x14\xa9\x92\x4f\x76\x55\x63\xfb\xb7\x17\x8f\x94\xf5\x61\xd9\x1e\x4f\x7a\x68\x7d\x19\x0d\xc9\xf7\xfd\x7b\x1f\x64\x92\x24\x37\xa2\x56\x7f\x45\xe7\x95\x35\x39\x88\xba\xf6\xd9\xf6\xf5\xcd\x46\x99\x22\x87\x0f\x58\x6b\xdb\x56\x68\xe8\xa6\x42\x12\x85\x20\x91\xdf\x00\x18\x51\x61\x0e\x2b\xdd\xfc\x33\x29\x51\x57\x89\xad\xd1\x09\xb2\x6e\xbf\x07\xb5\x82\xf4\xab\xa8\xd0\xd7\x42\x22\xfc\xfe\x7b\x77\x3a\xfc\x9b\xc3\x7e\x3f\xdd\xdd\xef\x01\x4d\xc1\xc7\x7c\x8d\x92\x59\x3b\xac\xb5\x92\xc2\xe7\xf0\xfa\x06\xc0\xa3\x46\x49\xd6\xf1\x0e\x40\x25\x48\x96\x9f\xc5\x12\xb5\x8f\x0b\xe7\x35\x61\x5a\x72\x82\x70\xdd\xc6\xa3\xd4\xd6\x98\xc3\x5f\x50\x3a\x14\x84\x37\x00\x84\x55\xad\x05\x61\xc7\x7a\x64\x1d\xff\xf4\x44\xca\x45\x39\xfc\x13\xc6\x58\x12\xa4\xac\x19\xd1\xd4\xce\x56\x48\x25\x36\x3e\x55\x36\xf3\xd2\x09\x56\xe1\x96\x5c\x83\xb7\xe1\xd0\xc1\xe6\xf0\x8d\x6e\xab\x24\xbe\x97\xd2\x36\x86\xbe\x5e\x16\xb7\xb5\xba\xa9\xd0\xe7\x9d\xbf\xff\x64\xc4\x52\xe3\x37\xa5\x35\xba\x6f\x9f\x9f\xa2\xd7\xe3\x2f\xe9\x34\x0f\x5c\x48\xfb\x44\x8a\x7e\x0f\x40\x5a\xb3\x52\xeb\x2f\xa2\xce\x47\x8b\x73\x63\x23\x5d\x12\x4f\x4f\x4e\x16\xb8\x12\x8d\xa6\x2f\xb6\xc0\x1c\x16\x3f\x2d\x16\x17\x04\xa3\x23\x3f\x22\xf6\x1c\x0a\x9a\x0a\x8e\x6b\xd1\xf8\xce\xb6\xde\xaa\x9f\xd1\xd1\x53\xbf\x1f\xb1\x73\x79\x17\xb5\xe7\xaf\x23\x3b\xd0\xd1\x80\xba\xf3\xb6\xbc\x59\x2c\x06\x16\xdd\xb9\xbb\xc3\x5f\xf8\x9b\x6d\x60\xa7\xb4\x06\x83\x58\x00\x95\xe8\x11\x68\x67\x0f\x81\x61\xcd\x5b\x3e\x22\x0c\x01\x59\x40\x4f\x62\xa9\x95\x2f\x61\x2b\xb4\x2a\x04\x61\x01\xdf\x3e\x3f\xf5\xec\xa4\x35\x06\x65\x80\x0f\x88\xb5\x50\xc6\x13\x44\xd3\x66\x92\xcf\x07\xf4\xee\x54\x40\xef\xae\x0e\xe8\xdd\xc5\x80\xde\x41\xf4\x6e\xc8\x23\xd8\x34\x4b\x74\x06\x09\x03\xb2\x49\xfb\x99\x7a\x73\xa7\x8f\xc4\x4c\x43\x7f\xf7\xbf\x0c\xfd\x29\xab\xdf\x0c\x56\xef\xf7\x68\x8a\xd1\xe1\x6f\x25\xc2\xca\x6a\x6d\x77\xca\xac\xbb\x68\x83\xf2\xb0\xb2\x0e\x1a\xcf\x6b\x02\x64\xe3\xc9\x56\xca\x63\x01\x1b\x63\x77\xe6\xd7\xd2\x7a\xf2\xb0\x52\x1a\xef\x7b\x46\xbb\x52\xc9\x32\x62\x64\x80\x91\x85\xc2\x1e\xa0\xc3\x44\xfc\xe1\xc0\xee\x0c\xac\x15\x71\x65\xb4\xe0\x04\x95\x03\x2a\x80\x4a\x61\x3a\xc1\x6b\x45\x65\xb3\x04\xeb\x18\x8e\xa0\xd5\x06\x53\x86\xe9\x2b\xad\x41\x68\x6f\x7b\x11\x15\xd7\x17\x50\x43\x3c\x94\x21\x1b\x68\xa4\x35\x24\x94\x41\x77\x0f\x4b\xd4\x76\x97\x9e\x84\x7d\x25\xda\xc8\x70\xc7\x78\x26\xcb\x65\x6e\xab\x0a\x04\x61\xc0\xfb\xf2\xd7\x08\xaa\x23\x73\xb9\x83\x28\x6b\x58\xcf\xca\x3a\x8c\x7a\x5b\x83\xf0\xdb\xa7\x82\xb7\xa8\xfd\x45\x69\xfc\xed\x6d\x70\x24\xc3\x5f\x18\x89\xf7\x9d\x2f\x5e\x39\xec\x19\x45\x5b\xa7\x3c\x3e\x2a\x7a\x68\x96\xc1\x3f\x29\x7c\xfd\x63\xb0\x05\x0d\xb9\x16\x36\xd8\x82\x2f\x6d\xa3\x0b\x58\x0e\x3c\x6e\xa3\x8a\xb7\x9d\x33\x23\xa3\xdb\x41\xf7\x5b\x96\x1b\xdc\x84\x05\x28\x03\xff\xce\x52\xef\xcb\x6c\xee\x8e\x03\xd8\xbd\x2f\x0b\xe5\x5e\x94\x86\xde\x97\xcf\xa7\x5f\xac\x41\x9c\x0a\x4f\x4f\x0f\x13\x88\xdf\x0c\x69\xf9\xf4\x10\xcc\x24\x0b\x42\x4a\xf4\x3e\x98\xff\xb1\xc3\x8b\x57\x64\x5d\x3b\x2b\xca\x6b\x45\xc9\x06\xdb\x97\x55\xe3\xb9\x12\xe3\xc3\x33\xcd\x03\xc8\xd1\xf4\x8e\x74\x28\x8a\xc4\x1a\xdd\xde\xc3\x0e\x61\x67\xcd\x2b\x82\x25\x02\x77\x2e\x56\x5e\x96\x95\x2d\x6e\x5e\x50\x72\x95\xef\xf3\xef\x80\x92\x3e\x05\xfb\x74\xa1\x52\x0c\x40\x67\x42\xcf\x30\x3d\xf8\x8c\xc1\x16\x9d\xf6\x16\x30\x5d\xa7\xf7\x20\x0e\x60\x2a\xc2\xe0\xc3\xa7\x52\xf8\xb4\xea\x59\x4c\xe4\xfc\xbd\xf1\x14\x00\xe8\x1b\x59\x06\x79\xf7\xc1\xf9\x9d\x2b\x46\xd9\xd0\xd3\x0b\xcd\x6e\x68\xa1\xb6\xca\x90\x07\x41\x90\x21\xc9\x8c\x21\x51\x64\x0c\x32\xd5\xa5\x03\x08\x0f\xe2\x20\x9e\xc5\x0e\x95\xa3\xeb\x29\x8d\xc7\xa3\x3c\xd8\x60\x7b\x1f\x34\x1c\x15\x94\x43\x72\x1e\x2a\x49\xcf\x66\x94\xaa\x62\x69\xb7\x78\x0f\x3b\x45\x25\x7b\x67\x9a\x92\x5d\x26\x85\xd1\x8b\x8d\x46\x21\xcb\x9e\x09\x3b\x51\x99\x60\x74\x04\xcb\x21\xd1\xb1\x80\x12\x1d\x9e\x4f\x99\x29\x02\xaf\x69\x0a\x21\x6d\x98\x2c\x86\xe6\x72\xda\x7c\x17\xf8\xce\xd7\xfc\xa3\xee\x2e\x1c\x06\xec\x04\xee\x11\x71\x7d\xb2\x29\xf4\x69\x2b\x2a\x7d\x54\x00\x85\x29\xba\x58\x74\x4d\x42\x48\x46\x8a\x72\x61\xbc\x6d\xd3\xd0\x59\xb4\x20\x42\xc7\xfd\x84\xc3\x87\x5c\xb4\xa4\x68\xfc\x50\xb9\x7a\x81\x14\xfa\x90\xab\xd0\xc5\x9c\xa8\xc4\x06\x63\x0d\x67\xbe\xd9\xc0\x78\xb0\xfc\x7c\x2c\xc6\xba\x27\xac\xfb\x4b\xa3\x12\x3a\xec\x98\xcb\x65\x11\x41\xc7\x11\x47\xac\x6a\x6a\x3f\x28\x97\xc3\xbe\x2f\x6c\x7d\x2f\xea\xe7\xe9\xf9\x64\x71\x34\x14\x77\xb1\x72\x18\xe2\x63\x2c\xdc\xe6\x3c\xdf\x7b\xba\x05\x55\x89\x35\xc6\x2e\x3d\xa1\x4c\xe1\x17\x65\xc2\xfc\x06\x15\xf7\x5b\x87\x92\xaf\x3a\x03\x3f\x87\x1a\x85\x47\xee\xaa\x81\x07\x6c\xe3\x3d\x89\x33\xb7\x24\xaa\x7d\x9e\x65\x65\xb3\x4c\x0b\x2b\x37\xe8\x52\x69\xab\xcc\x65\x3b\x14\x5b\xdc\x59\xb7\xf1\xd9\x44\x5a\x46\x62\xed\x47\xcc\x19\x13\x7c\xdd\xe1\xab\x10\xab\x40\x62\x3d\xc9\x1a\x88\x32\x73\xe8\xb8\x2b\x1b\x0a\x85\x2c\xa6\x6c\xf3\xd7\xe9\x22\x5d\x24\x4e\xfe\x61\x4a\xf7\xd8\x68\xfd\x68\xb5\x92\x6d\x0e\x9f\x56\x5f\x2d\x3d\x3a\xf4\x63\xf3\x6a\xeb\x68\x74\x5d\xe9\x27\x4b\xa2\x7a\x7a\x47\x88\x91\x78\xb4\x8e\x72\xf8\x61\xf1\xc3\x30\xe4\x6b\xb5\x45\x83\xde\x3f\x3a\xbb\xc4\x71\xf3\x60\x1e\x1f\x8f\xfb\x49\x3d\x67\x10\x96\x05\x95\x39\x64\x25\x0a\x4d\xe5\xbf\x46\x5b\xca\x28\x52\x42\x7f\x40\x2d\xda\x27\x94\xd6\x14\xdd\xad\xf0\xf0\x23\x55\xa1\x6d\xa8\xdf\xfb\xb1\xdf\x63\xd4\xab\xff\x53\xcd\xbc\x6d\x9c\x44\x3f\xd6\xc0\xe1\x3f\x1a\xf4\xe4\xa7\x5a\xc9\xba\xc9\xe1\xc7\x45\x35\x59\xac\xb0\xb2\xae\xcd\xe1\xa7\x37\x5f\x54\xbf\x11\x0b\xd3\x17\xae\x0e\x23\x1e\x77\xf0\xc9\x48\xdd\x14\x18\xbb\x65\x37\x58\x4e\xe7\xc0\xb3\xe3\xaa\x75\xf3\xfe\xc5\x2c\xb9\xac\xbd\x3d\x74\x99\xd1\x60\x59\xe2\xa1\x1d\x17\x28\xb5\x70\x58\xc4\xbe\x92\x8e\x68\x4f\xce\x4b\xb1\x06\x04\x6d\x1e\xa3\xbf\x9d\xb5\x14\x46\xae\xc9\x09\x0e\xe9\x9f\x8d\x6e\x73\xe0\x0b\xf4\x33\x73\x11\x5c\x1c\x76\xa6\xe2\x26\x0d\x78\x3e\x81\x9c\xef\x5a\x73\xcd\x27\xac\xe6\xb7\xcc\xe7\x4b\xee\x9c\xe5\x56\xb8\x8e\x25\x27\x7d\x76\x62\xa8\xbb\xa2\xca\xbe\x80\x6d\x16\xe8\xce\x3f\x2c\x9c\x70\xf0\xd9\x2b\xfe\x39\xe7\x30\xc1\xe4\xd8\x34\xb6\x17\x45\x88\x2b\xf9\x1f\x9f\x3c\x12\x71\x31\xcc\x67\x0c\x3a\x1f\xed\x89\x41\x73\xb0\x5e\x14\x21\xae\xe4\x7f\x7c\x72\x96\x0f\x47\x60\x13\x6e\x3d\xa9\x05\x0f\x76\xc7\x69\xbf\xe2\x86\x37\x79\x5b\x60\x2f\x27\x09\x85\xa5\xa4\x7f\xab\x7b\x37\xb9\x84\x1f\xbd\xd9\x9d\x5e\xed\x1c\xba\x69\x96\x98\xf8\xd6\x13\x56\xbd\x56\xcf\x3f\x54\xdd\x01\x2f\xc4\x72\xd3\xb8\xf0\x94\x76\x4a\xbf\xc3\xcb\x05\x3a\x4a\xb8\x3c\xbf\x9b\x7b\x29\x93\x22\x95\x8e\xce\x51\x63\xd0\xe1\xdd\x24\x2e\x47\x47\x36\xd8\x9e\x64\x9e\x91\xf6\xe9\x38\xff\x8f\x15\x3b\xa7\x55\x20\xbc\xa0\xd3\x16\x9d\x5a\xb5\x17\x75\xba\xce\xe8\x93\xb0\xfe\xd9\x56\x3c\x96\x83\x6d\xc2\xc5\xe1\xfc\x7b\xd4\xf3\xef\x50\x11\xc2\xff\x4d\x34\x66\xf4\xa7\xe2\x31\x3b\x74\x75\x44\xe6\xea\x5d\x1d\x93\x19\xe9\xa9\xa8\x7c\xa7\xf9\x43\x7a\x76\x99\xf0\x80\xba\xea\xde\xdc\xfd\xf4\xbd\x36\xe9\x3c\x52\xc4\x21\xb7\x1b\x38\x3d\xe7\xe3\x8c\x6a\xc6\xf6\x7d\x51\x28\x0e\x9f\xd0\xef\xdd\xda\x4f\x61\x30\xec\x71\x6d\x68\x18\x12\x7e\xbf\x07\x27\xcc\x1a\x2f\x51\x26\xe1\xf2\x3f\x79\xac\x1f\xbe\xfe\x13\x00\x00\xff\xff\x79\xc9\xbb\xd9\x3f\x18\x00\x00"),
		},
		"/tiller-ca-cert-configmap.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "tiller-ca-cert-configmap.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 226,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8e\xc1\x0a\xc2\x30\x0c\x40\xef\xfd\x8a\xfc\x40\x07\x82\xa7\xde\xa4\x78\x53\x2f\x0e\xef\xb1\xcd\xb4\xd8\x66\xa3\x8b\x22\xd4\xfe\xbb\x6c\x4c\xd1\x63\x78\x2f\x2f\x29\x05\x42\x07\xcd\x96\xf1\x1c\xa9\x0d\x31\x52\x6e\x77\x47\xa8\x55\x6b\xad\x70\x08\x27\xca\x63\xe8\xd9\xc0\x63\xa5\x6e\x81\xbd\x01\xdb\x73\x17\x2e\x7b\x1c\x54\x22\x41\x8f\x82\x46\x01\x30\x26\x32\xd0\xc5\xfb\x53\x5f\x29\x26\x2d\x71\xd4\x0e\xb5\x9b\xe5\xe5\xc8\x01\x13\x8d\x03\x3a\x82\x5a\x97\x95\x79\x34\x50\xca\x3f\x2d\x05\x88\xfd\xa4\x7d\xfa\x0e\x1b\x97\xc5\xc0\x4b\x4d\x31\xf6\xc4\x02\x6b\x68\xbe\x1f\xdb\x8d\xa5\x2c\xb6\x67\x99\xc8\x6f\xe1\x1d\x00\x00\xff\xff\x60\xd7\x1c\xac\xe2\x00\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/flux-helm-operator-account.yaml.tmpl"].(os.FileInfo),
		fs["/flux-helm-release-crd.yaml.tmpl"].(os.FileInfo),
		fs["/helm-operator-deployment.yaml.tmpl"].(os.FileInfo),
		fs["/tiller-ca-cert-configmap.yaml.tmpl"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
